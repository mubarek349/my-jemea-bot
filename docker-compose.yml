version: '3.8'

services:
  # Database
  mysql:
    image: mysql:8.0
    container_name: jemea-bot-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-jemea_bot_root_password}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-jemea_bot}
      MYSQL_USER: ${MYSQL_USER:-jemea_bot_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-jemea_bot_password}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    networks:
      - jemea-bot-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis (for caching and rate limiting)
  redis:
    image: redis:7-alpine
    container_name: jemea-bot-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - jemea-bot-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 3s
      retries: 5

  # Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: jemea-bot-app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: mysql://${MYSQL_USER:-jemea_bot_user}:${MYSQL_PASSWORD:-jemea_bot_password}@mysql:3306/${MYSQL_DATABASE:-jemea_bot}
      REDIS_URL: redis://redis:6379
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      TELEGRAM_GROUP_ID: ${TELEGRAM_GROUP_ID}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      NEXTAUTH_URL: ${NEXTAUTH_URL:-http://localhost:3000}
      ADMIN_PANEL_URL: ${ADMIN_PANEL_URL:-http://localhost:3000/admin}
    ports:
      - "3000:3000"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - jemea-bot-network
    volumes:
      - app_logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Bot service (separate from web app)
  bot:
    build:
      context: .
      dockerfile: Dockerfile.bot
    container_name: jemea-bot-telegram
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: mysql://${MYSQL_USER:-jemea_bot_user}:${MYSQL_PASSWORD:-jemea_bot_password}@mysql:3306/${MYSQL_DATABASE:-jemea_bot}
      REDIS_URL: redis://redis:6379
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      TELEGRAM_GROUP_ID: ${TELEGRAM_GROUP_ID}
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - jemea-bot-network
    volumes:
      - bot_logs:/app/logs

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: jemea-bot-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - jemea-bot-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  app_logs:
    driver: local
  bot_logs:
    driver: local

networks:
  jemea-bot-network:
    driver: bridge
